<div class="bg-white p-4 rounded shadow-lg flex justify-center gap-4 items-center mb-8">
    <p class="text-3xl font-bold">{{races.length}}</p>
    <h3 class="text-xl font-semibold text-gray-700">Races</h3>
</div>
<div class="text-sm">
    <div class="bg-white hover:bg-green-50 hover:scale-105 transition p-2 rounded shadow mb-6 cursor-pointer" onclick="document.getElementById('raceModal-new').classList.remove('hidden')">
        + Add New Race
    </div>
    {{#each races}}
        <div class="bg-white hover:bg-red-50 hover:scale-105 transition p-2 rounded shadow mt-2 flex justify-between items-center gap-4 cursor-pointer"
             onclick="document.getElementById('raceModal-{{id}}').classList.remove('hidden')">
            <div class="flex items-center gap-2">
                <img src="../flags/{{flag}}" class="inline h-5" alt="flag={{flag}}">
                <div class="font-bold text-nowrap">{{name}}</div>
            </div>
            <div class="overflow-hidden whitespace-nowrap text-ellipsis">{{formattedDate}}</div>
        </div>

        <div id="raceModal-{{id}}" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white p-6 rounded shadow-xl w-full max-w-6xl space-y-4 overflow-y-auto max-h-[95vh]">
                <h2 class="text-xl font-bold">Edit Race</h2>
                <form method="POST" action="/admin/races/{{id}}" class="space-y-4">
                    <div class="grid md:grid-cols-2 gap-6">
                        <div class="space-y-2">
                            <input type="hidden" name="id" value="{{id}}">
                            <label class="block mb-1 font-medium text-xs">Race Name</label>
                            <input type="text" name="name" class="w-full border px-2 py-1 rounded" value="{{name}}" style="margin-top: 2px!important;">

                            <label class="block font-medium text-xs">Location</label>
                            <input type="text" name="nameShort" class="w-full border px-2 py-1 rounded" value="{{nameShort}}" style="margin-top: 2px!important;">

                            <label class="block font-medium text-xs">Flag</label>
                            <input type="text" name="flag" class="w-full border px-2 py-1 rounded" value="{{flag}}" style="margin-top: 2px!important;">

                            <div class="flex gap-4">
                                <input type="date" name="date" class="w-full border px-2 py-1 rounded" value="{{date}}" style="margin-top: 2px!important;">
                                <input type="time" name="time" class="w-full border px-2 py-1 rounded" value="{{time}}">
                            </div>

                            <label class="block mb-1 font-medium text-xs">Weather</label>
                            <input type="text" name="weatherText" class="w-full border px-2 py-1 rounded" value="{{weatherText}}" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Weather Icon</label>
                            <input type="text" name="weatherIcon" class="w-full border px-2 py-1 rounded" value="{{weatherIcon}}" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Temperature (Â°C)</label>
                            <input type="number" name="weatherTemperature" class="w-full border px-2 py-1 rounded" value="{{weatherTemperature}}" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Track Image URL</label>
                            <input type="url" name="track_img" class="w-full border px-2 py-1 rounded" value="{{track_img}}" style="margin-top: 2px!important;">

                            <div class="flex gap-4 text-sm">
                                Predictions started:
                                <label><input type="radio" name="predictionsStarted" value="true" {{#if predictionsStarted}}checked{{/if}} style="margin-top: 2px!important;">
                                    Yes
                                </label>
                                <label><input type="radio" name="predictionsStarted" value="false" {{#unless predictionsStarted}}checked{{/unless}} style="margin-top: 2px!important;">
                                    No
                                </label>
                            </div>
                            <div class="flex gap-4 text-sm">
                                Predictions ended:
                                <label><input type="radio" name="predictionsEnded" value="true" {{#if predictionsEnded}}checked{{/if}}> Yes</label>
                                <label><input type="radio" name="predictionsEnded" value="false" {{#unless predictionsEnded}}checked{{/unless}}> No</label>
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-xs">
                            <div>
                                <label class="block mb-1 font-medium text-xs">Drivers Grid</label>
                                <div class="space-y-1">
                                    {{#each gridArray}}
                                        <div class="flex items-center">
                                            <span class="mr-2 w-5 text-center font-bold">{{position}}</span>
                                            <select name="drivers[]" class="w-full border p-1 rounded driver-select">
                                                <option value="">--</option>
                                                {{#each ../../drivers}}
                                                    <option value="{{id}}" class="text-white bg-[{{color}}] bg-hover-white m-1"
                                                            {{#if (eq id ../driver.id)}}selected{{/if}}
                                                            data-team-color="{{color}}">
                                                        {{name}} - {{team}}
                                                    </option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    {{/each}}
                                </div>
                            </div>
                            <div>
                                <label class="block mb-1 font-medium text-xs">Race Result</label>
                                <div class="space-y-1">
                                    {{#each resultArray}}
                                        <div class="flex items-center">
                                            <span class="mr-2 w-5 text-center font-bold">{{position}}</span>
                                            <select name="result[]" class="w-full border p-1 rounded driver-select">
                                                <option value="">--</option>
                                                {{#each ../../drivers}}
                                                    <option value="{{id}}" class="text-white bg-[{{color}}] bg-hover-white m-1"
                                                            {{#if (eq id ../driver.id)}}selected{{/if}}
                                                            data-team-color="{{color}}">
                                                        {{name}} - {{team}}
                                                    </option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    {{/each}}
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="flex justify-between mt-6">
                        <button type="button" onclick="this.closest('.fixed').classList.add('hidden')" class="bg-gray-300 px-4 py-2 rounded">Cancel</button>
                        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="raceModal-new" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white p-6 rounded shadow-xl w-full max-w-6xl space-y-4 overflow-y-auto max-h-[95vh]">
                <h2 class="text-xl font-bold">Add New Race</h2>
                <form method="POST" action="/admin/races" class="space-y-4">
                    <div class="grid md:grid-cols-2 gap-6">
                        <div class="space-y-2">
                            <input type="hidden" name="id" value="new">
                            <label class="block mb-1 font-medium text-xs">Race Name</label>
                            <input type="text" name="name" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Location</label>
                            <input type="text" name="nameShort" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Flag</label>
                            <input type="text" name="flag" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <div class="flex gap-4">
                                <input type="date" name="date" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">
                                <input type="time" name="time" class="w-full border px-2 py-1 rounded" value="">
                            </div>

                            <label class="block mb-1 font-medium text-xs">Weather</label>
                            <input type="text" name="weatherText" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Weather Icon</label>
                            <input type="text" name="weatherIcon" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block font-medium text-xs">Temperature (Â°C)</label>
                            <input type="number" name="weatherTemperature" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block font-medium text-xs">Track Image URL</label>
                            <input type="url" name="track_img" class="w-full border px-2 py-1 rounded" value="" style="margin-top: 2px!important;">

                            <label class="block mb-1 font-medium text-xs">Predictions</label>
                            <div class="flex gap-4 text-sm">
                                Started:
                                <label><input type="radio" name="predictionsStarted" value="true"> Yes</label>
                                <label><input type="radio" name="predictionsStarted" value="false" checked> No</label>
                            </div>
                            <div class="flex gap-4 text-sm">
                                Ended:
                                <label><input type="radio" name="predictionsEnded" value="true"> Yes</label>
                                <label><input type="radio" name="predictionsEnded" value="false" checked> No</label>
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-xs">
                            <div>
                                <label class="block mb-1 font-medium text-xs">Drivers Grid</label>
                                <div class="space-y-1">
                                    {{#each (range 1 20)}}
                                        <div class="flex items-center">
                                            <span class="mr-2 w-5 text-center font-bold">{{this}}</span>
                                            <select name="drivers[]" class="w-full border p-1 rounded driver-select">
                                                <option value="">--</option>
                                                {{#each ../drivers}}
                                                    <option value="{{id}}" class="text-white bg-[{{color}}] bg-hover-white m-1"
                                                            data-team-color="{{color}}">
                                                        {{name}} - {{team}}
                                                    </option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    {{/each}}
                                </div>
                            </div>
                            <div>
                                <label class="block mb-1 font-medium text-xs">Race Result</label>
                                <div class="space-y-1">
                                    {{#each (range 1 20)}}
                                        <div class="flex items-center">
                                            <span class="mr-2 w-5 text-center font-bold">{{this}}</span>
                                            <select name="result[]" class="w-full border p-1 rounded driver-select">
                                                <option value="">--</option>
                                                {{#each ../drivers}}
                                                    <option value="{{id}}" class="text-white bg-[{{color}}] bg-hover-white m-1"
                                                            data-team-color="{{color}}">
                                                        {{name}} - {{team}}
                                                    </option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    {{/each}}
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="flex justify-between mt-6">
                        <button type="button" onclick="this.closest('.fixed').classList.add('hidden')" class="bg-gray-300 px-4 py-2 rounded">Cancel</button>
                        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
                    </div>
                </form>
            </div>
        </div>
    {{/each}}
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const styleSelectOptions = () => {
            document.querySelectorAll('.driver-select').forEach(select => {
                Array.from(select.options).forEach(option => {
                    if (option.dataset.teamColor) {
                        option.style.backgroundColor = option.dataset.teamColor;
                        option.style.color = getContrastColor(option.dataset.teamColor);
                    }
                });
            });
        };

        function getContrastColor(hexColor) {
            const r = parseInt(hexColor.substr(1, 2), 16);
            const g = parseInt(hexColor.substr(3, 2), 16);
            const b = parseInt(hexColor.substr(5, 2), 16);

            const brightness = (r * 299 + g * 587 + b * 114) / 1000;

            return brightness > 128 ? '#000000' : '#FFFFFF';
        }

        styleSelectOptions();

        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', async function(e) {
                console.log(e)
                e.preventDefault();

                const existingError = form.querySelector('.form-error-message');
                if (existingError) {
                    existingError.remove();
                }

                const errorContainer = document.createElement('div');
                errorContainer.className = 'form-error-message bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded mb-4 hidden';
                form.insertBefore(errorContainer, form.firstChild);

                const submitButton = form.querySelector('button[type="submit"]');
                const originalButtonText = submitButton.innerHTML;
                submitButton.disabled = true;
                submitButton.innerHTML = 'Saving...';

                const formData = new FormData(form);
                const data = {};

                let drivers = [];
                let results = [];

                formData.forEach((value, key) => {
                    if (key === 'drivers[]') {
                        if (value) drivers.push(value);
                    } else if (key === 'result[]') {
                        if (value) results.push(value);
                    } else if (key === 'predictionsStarted' || key === 'predictionsEnded') {
                        data[key] = value === 'true';
                    } else {
                        data[key] = value;
                    }
                });

                data.drivers = drivers;
                data.result = results;

                const id = form.querySelector('input[name="id"]')?.value;
                const url = id && id !== 'new' ? `/admin/races/${id}` : '/admin/races';

                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Cache-Control': 'no-cache'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (response.ok) {
                        errorContainer.className = 'form-success-message bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded mb-4';
                        errorContainer.textContent = 'Race saved successfully!';
                        errorContainer.classList.remove('hidden');

                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    } else {
                        errorContainer.textContent = result.message || 'Error saving race';
                        errorContainer.classList.remove('hidden');

                        submitButton.disabled = false;
                        submitButton.innerHTML = originalButtonText;
                    }
                } catch (error) {
                    errorContainer.textContent = 'Network error occurred. Please try again.';
                    errorContainer.classList.remove('hidden');

                    submitButton.disabled = false;
                    submitButton.innerHTML = originalButtonText;
                }
            });
        });
    });
</script>