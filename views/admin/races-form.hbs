<div class="flex">
    <div class="w-full p-6">
        <div class="mb-6">
            <h2 class="text-2xl font-semibold">{{#if race}}Edit Race{{else}}Create New Race{{/if}}</h2>
            <a href="/admin/races" class="text-blue-500 hover:underline">‚Üê Back to Races</a>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-md">
            <form id="raceForm" method="POST" action="{{#if race}}/api/races/{{race.id}}{{else}}/api/races{{/if}}">
                {{#if race}}
                    <input type="hidden" name="_method" value="PUT">
                {{/if}}

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
                            Race Name
                        </label>
                        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                               id="name" name="name" type="text" placeholder="Race Name" required
                               value="{{#if race}}{{race.name}}{{/if}}">
                    </div>

                    <div>
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="location">
                            Location
                        </label>
                        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                               id="location" name="location" type="text" placeholder="Location" required
                               value="{{#if race}}{{race.location}}{{/if}}">
                    </div>

                    <div>
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="date">
                            Date
                        </label>
                        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                               id="date" name="date" type="date" required
                               value="{{#if race}}{{race.date}}{{/if}}">
                    </div>

                    <div>
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="time">
                            Time
                        </label>
                        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                               id="time" name="time" type="time" required
                               value="{{#if race}}{{race.time}}{{/if}}">
                    </div>

                    {{#if race}}
                        <div class="md:col-span-2">
                            <label class="block text-gray-700 text-sm font-bold mb-2">
                                Predictions Status
                            </label>
                            <div class="flex items-center mt-2">
                                <input id="predictionsOpen" name="predictionsEnded" type="radio" value="false"
                                       {{#unless race.predictionsEnded}}checked{{/unless}}
                                       class="h-4 w-4 text-blue-600 focus:ring-blue-500">
                                <label for="predictionsOpen" class="ml-2 text-gray-700">
                                    Open for Predictions
                                </label>
                            </div>
                            <div class="flex items-center mt-1">
                                <input id="predictionsClosed" name="predictionsEnded" type="radio" value="true"
                                       {{#if race.predictionsEnded}}checked{{/if}}
                                       class="h-4 w-4 text-blue-600 focus:ring-blue-500">
                                <label for="predictionsClosed" class="ml-2 text-gray-700">
                                    Closed for Predictions
                                </label>
                            </div>
                        </div>
                    {{/if}}
                </div>

                <div class="mt-8">
                    <h3 class="text-lg font-semibold mb-4">Driver Lineup</h3>

                    <div id="driversContainer" class="space-y-2">
                        {{#if race.drivers}}
                            {{#each race.drivers}}
                                <div class="driver-row flex items-center space-x-2">
                                    <label for="driver" class="hidden">Driver</label>
                                    <select id="driver" name="drivers[]"
                                            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline driver-select">
                                        <option value="">Select Driver</option>
                                        {{#each ../allDrivers}}
                                            <option value="{{id}}"
                                                    {{#if (eq id ../this)}}selected{{/if}}>{{name}}</option>
                                        {{/each}}
                                    </select>
                                    <button type="button"
                                            class="remove-driver bg-red-500 hover:bg-red-600 text-white py-2 px-3 rounded">
                                        X
                                    </button>
                                </div>
                            {{/each}}
                        {{else}}
                            <div class="driver-row flex items-center space-x-2">
                                <label for="driver" class="hidden">Driver</label>
                                <select id="driver" name="drivers[]"
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline driver-select">
                                    <option value="">Select Driver</option>
                                    {{#each allDrivers}}
                                        <option value="{{id}}">{{name}}</option>
                                    {{/each}}
                                </select>
                                <button type="button"
                                        class="remove-driver bg-red-500 hover:bg-red-600 text-white py-2 px-3 rounded">
                                    X
                                </button>
                            </div>
                        {{/if}}
                    </div>

                    <button type="button" id="addDriverBtn"
                            class="mt-3 bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded">
                        Add Driver
                    </button>
                </div>

                <div class="mt-8 flex justify-between">
                    <button type="submit"
                            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        {{#if race}}Update Race{{else}}Create Race{{/if}}
                    </button>
                    <a href="/admin/races"
                       class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const driversContainer = document.getElementById('driversContainer');
        const addDriverBtn = document.getElementById('addDriverBtn');
        const raceForm = document.getElementById('raceForm');

        addDriverBtn.addEventListener('click', function () {
            const driverRow = document.createElement('div');
            driverRow.className = 'driver-row flex items-center space-x-2';

            const driverSelect = document.createElement('select');
            driverSelect.name = 'drivers[]';
            driverSelect.className = 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline driver-select';

            const firstSelect = document.querySelector('.driver-select');
            firstSelect.querySelectorAll('option').forEach(opt => {
                const option = document.createElement('option');
                option.value = opt.value;
                option.textContent = opt.textContent;
                driverSelect.appendChild(option);
            });

            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'remove-driver bg-red-500 hover:bg-red-600 text-white py-2 px-3 rounded';
            removeBtn.textContent = 'X';

            driverRow.appendChild(driverSelect);
            driverRow.appendChild(removeBtn);
            driversContainer.appendChild(driverRow);
        });

        driversContainer.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-driver')) {
                if (document.querySelectorAll('.driver-row').length > 1) {
                    e.target.closest('.driver-row').remove();
                }
            }
        });

        raceForm.addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(raceForm);
            let raceData = {};

            for (const [key, value] of formData.entries()) {
                if (key === 'drivers[]') {
                    if (!raceData.drivers) raceData.drivers = [];
                    if (value) raceData.drivers.push(value);
                } else if (key === 'predictionsEnded') {
                    raceData[key] = value === 'true';
                } else if (key !== '_method') {
                    raceData[key] = value;
                }
            }

            const method = formData.get('_method') === 'PUT' ? 'PUT' : 'POST';

            fetch(raceForm.action, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(raceData)
            })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/admin/races';
                        } else {
                            response.json().then(data => {
                                alert(data.message || 'Error saving race data');
                            }).catch(() => {
                                alert('Error saving race data');
                            });
                        }
                    });
        });
    });
</script>