<div class="flex">
    <div class="w-full p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-semibold">Manage Teams</h2>
            <button id="addTeamBtn" class="bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded">
                Add New Team
            </button>
        </div>

        {{#if teams.length}}
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white rounded-lg overflow-hidden">
                    <thead class="bg-gray-100">
                    <tr>
                        <th class="py-3 px-4 text-left">ID</th>
                        <th class="py-3 px-4 text-left">Name</th>
                        <th class="py-3 px-4 text-left">Colors</th>
                        <th class="py-3 px-4 text-left">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    {{#each teams}}
                        <tr class="border-t">
                            <td class="py-3 px-4">{{id}}</td>
                            <td class="py-3 px-4">{{name}}</td>
                            <td class="py-3 px-4">
                                <div class="flex items-center space-x-2">
                                    <div class="w-6 h-6 rounded" style="background-color: {{color}}"></div>
                                    <div class="w-6 h-6 rounded" style="background-color: {{color_dark}}"></div>
                                </div>
                            </td>
                            <td class="py-3 px-4">
                                <div class="flex space-x-2">
                                    <button class="edit-team-btn bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm" data-id="{{id}}">
                                        Edit
                                    </button>
                                    <button class="delete-team-btn bg-red-500 hover:bg-red-600 text-white py-1 px-3 rounded text-sm" data-id="{{id}}">
                                        Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    {{/each}}
                    </tbody>
                </table>
            </div>
        {{else}}
            <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded">
                No teams found. Add your first team using the button above.
            </div>
        {{/if}}
    </div>
</div>

<div id="teamModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-lg p-8 max-w-md w-full">
        <h3 id="modalTitle" class="text-xl font-semibold mb-4">Add New Team</h3>
        <form id="teamForm">
            <input type="hidden" id="teamId" name="teamId" value="">
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="teamName">
                    Team Name
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                       id="teamName" name="name" type="text" placeholder="Team Name" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="teamColor">
                    Primary Color
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                       id="teamColor" name="color" type="color" value="#cccccc">
            </div>
            <div class="mb-6">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="teamColorDark">
                    Secondary Color
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                       id="teamColorDark" name="color_dark" type="color" value="#999999">
            </div>
            <div class="flex items-center justify-between">
                <button id="saveTeamBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                    Save
                </button>
                <button id="cancelTeamBtn" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="button">
                    Cancel
                </button>
            </div>
        </form>
    </div>
</div>

<div id="deleteConfirmModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-lg p-8 max-w-md w-full">
        <h3 class="text-xl font-semibold mb-4">Confirm Deletion</h3>
        <p class="mb-6">Are you sure you want to delete this team? This action cannot be undone.</p>
        <div class="flex items-center justify-between">
            <button id="confirmDeleteBtn" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="button">
                Delete
            </button>
            <button id="cancelDeleteBtn" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="button">
                Cancel
            </button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const teamModal = document.getElementById('teamModal');
        const deleteConfirmModal = document.getElementById('deleteConfirmModal');
        const teamForm = document.getElementById('teamForm');
        const modalTitle = document.getElementById('modalTitle');
        const teamIdInput = document.getElementById('teamId');

        document.getElementById('addTeamBtn').addEventListener('click', function() {
            modalTitle.textContent = 'Add New Team';
            teamForm.reset();
            teamIdInput.value = '';
            toggleModal(teamModal, true);
        });

        document.querySelectorAll('.edit-team-btn').forEach(button => {
            button.addEventListener('click', function() {
                const teamId = this.getAttribute('data-id');
                modalTitle.textContent = 'Edit Team';

                fetch(`/api/teams/${teamId}`)
                        .then(response => response.json())
                        .then(team => {
                            teamIdInput.value = team.id;
                            document.getElementById('teamName').value = team.name;
                            document.getElementById('teamColor').value = team.color;
                            document.getElementById('teamColorDark').value = team.color_dark;
                            toggleModal(teamModal, true);
                        });
            });
        });

        let teamToDelete = null;
        document.querySelectorAll('.delete-team-btn').forEach(button => {
            button.addEventListener('click', function() {
                teamToDelete = this.getAttribute('data-id');
                toggleModal(deleteConfirmModal, true);
            });
        });

        document.getElementById('cancelTeamBtn').addEventListener('click', function() {
            toggleModal(teamModal, false);
        });

        document.getElementById('cancelDeleteBtn').addEventListener('click', function() {
            toggleModal(deleteConfirmModal, false);
            teamToDelete = null;
        });

        teamForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const isEdit = teamIdInput.value !== '';
            const endpoint = isEdit ? `/admin/teams/${teamIdInput.value}` : '/admin/teams';
            const method = isEdit ? 'PUT' : 'POST';

            const formData = new FormData(teamForm);
            const teamData = {
                name: formData.get('name'),
                color: formData.get('color'),
                color_dark: formData.get('color_dark')
            };

            fetch(endpoint, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(teamData)
            })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Error saving team');
                        }
                    });
        });

        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (teamToDelete) {
                fetch(`/api/teams/${teamToDelete}`, {
                    method: 'DELETE'
                })
                        .then(response => {
                            if (response.ok) {
                                window.location.reload();
                            } else {
                                alert('Error deleting team');
                            }
                        });
            }
        });

        function toggleModal(modal, show) {
            if (show) {
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            } else {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }
        }
    });
</script>